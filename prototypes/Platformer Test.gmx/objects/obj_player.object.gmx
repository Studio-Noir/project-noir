<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize variables
grav = 0.9;
hsp = 0;
vsp = 0;
jumpspeed = 8;
movespeed = 8;
lightsize = 128;
orbs_max = 3;
orbs_current = 3;

facing = 0;
key_orb1 = false;
key_orb2 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(key_left == true){
    if (place_free(x-movespeed,y)){
        x -= movespeed;
        //hspeed = -movespeed;
    }
    if(image_xscale &gt; 0){
        image_xscale *= -1;
    }
}else if(key_right == true){
    if(place_free(x+movespeed,y)){
        x += movespeed;
        //hspeed = movespeed;
    }
    if(image_xscale &lt; 0){
        image_xscale *= -1;
    }
}else{
    //hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_free(x,y+1) {
    gravity = grav;
    gravity_direction = 270;
} else {
    gravity = 0;
    gravity_direction = 270;
}
//Input Detection
key_left = keyboard_check(ord('A')) or keyboard_check(vk_left);
key_right = keyboard_check(ord('D')) or keyboard_check(vk_right);
key_up = keyboard_check(ord('W')) or keyboard_check(vk_up);
key_orb1_prev = key_orb1;
key_orb2_prev = key_orb2;
key_orb1 = keyboard_check(ord('Z')) or keyboard_check(ord('H'));
key_orb2 = keyboard_check(ord('X')) or keyboard_check(ord('J'));
//Movement Result
if (!place_free(x,y+1) and key_up == true){
    vspeed=-jumpspeed;
}
if(key_left == true){
facing = 180;
    if (place_free(x-4,y)){
        //x -= movespeed;
    }
    if(image_xscale &gt; 0){
        image_xscale *= -1;
    }
}else if(key_right == true){
    facing = 0;
    if(place_free(x+4,y) and key_right == true){
        //x += movespeed;
    }
    if(image_xscale &lt; 0){
        image_xscale *= -1;
    }
}else{
    //hspeed = 0;
}
//Orb Fire Result
if(orbs_current &gt; 0){
    if(orbs_current &gt; orbs_max){
        orbs_current = orbs_max;
    }
    if(orbs_current &gt; 1 and key_orb2 and !key_orb2_prev){
        //Fire out orb in direction being faced
        var inst;
        inst = instance_create(x, y - sprite_height/2, obj_orb);
        inst.speed = 10;
        inst.direction = facing;
        inst.orb_value = 2;
        orbs_current -= 2;
    }
    if(orbs_current &gt; 0 and key_orb1 and !key_orb1_prev){
        //Place orb in place
        instance_create(x, y - sprite_height/2, obj_orb);
        orbs_current--;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,12);
vspeed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>613</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>orbs_current</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-64</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Lighting
draw_set_blend_mode( bm_add );
draw_set_alpha(0.3);
draw_circle_colour(x, y - sprite_height/2, 64, c_white, c_black, 0);
draw_set_alpha(1);
draw_set_blend_mode( bm_normal );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var orb = instance_find(obj_orb, instance_number(obj_orb) - 1);
with (orb) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>206</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object_motion</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_orb</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>facing</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
